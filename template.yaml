AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  SecretName:
    Type: String
    Default: sfl_secrets
  Region:
    Type: String
    Default: us-east-1

Resources:
  LambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: EtlLambdaRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite

  ETLLambda:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python3.8
      FunctionName: ETL_trigger
      MemorySize: 128
      Timeout: 300
      CodeUri: etl-scripts/src/
      Layers: 
        - !Ref SflIngestionLayer
      Role: !GetAtt
        - LambdaRole
        - Arn
      Environment:
        Variables:
          secrets: !Ref SecretName
          region: !Ref Region

      VpcConfig:
        SecurityGroupIds:
          - sg-012d9f06f33426bd3
        SubnetIds:
          - subnet-04acf9f2eb1e3a6e0
          - subnet-0abbbb58fb610ab92
          - subnet-02f4e9ff8dd406e80

  SflIngestionLayer:
    Type: 'AWS::Serverless::LayerVersion'
    Properties:
      LayerName: !Sub "sfl-lambda-layer"
      CompatibleRuntimes:
        - python3.6
        - python3.7
      ContentUri: packages/

      #/Users/samsideenajala/Documents/Cloud-Compute/GIT/ETL-dataingestion-samsideen/packages/python